///// dev Herick Betin Tiburski //////////////
#include <iostream>
#include <termios.h>
#include <unistd.h>
#include <cstdlib>
using namespace std;

int getch(void) {
	int ch;
	struct termios oldt;
	struct termios newt;
	tcgetattr(STDIN_FILENO, &oldt); // guarda as configurações antigas
	newt = oldt; // copia as configurações antigas para as novas
	newt.c_lflag &= ~(ICANON | ECHO); // faz uma mudança nas novas configurações
	tcsetattr(STDIN_FILENO, TCSANOW, &newt); // aplica as novas configuraC'C5es
	ch = getchar();                          // pega a tecla
	tcsetattr(STDIN_FILENO, TCSANOW, &oldt); // restaura as configurações antigas
	return ch;                               // retorna o caractere lido
}

void SetCursorPos(int XPos, int YPos) {
	printf("\033[%d;%dH", YPos + 1, XPos + 1);
}

///////////////////////// Variaveis Globais ///////////////////////////////////

int nivel = 1;
int Vidas = 3;
int ganhououperdeu = 0;
int a1 = 1;
int a2 = 1;
int visible = 0;
int main() {
    
    if (Vidas == 0){
        /// ganhououperdeu == 1 <- Ganhou 0 <- perdeu
        if (ganhououperdeu == 0){
            cout << R"(
    
       ██████   █████  ███    ███ ███████     ███████ ██    ██ ███████ ██████  
      ██       ██   ██ ████  ████ ██          ██   ██ ██    ██ ██      ██   ██ 
      ██   ███ ███████ ██ ████ ██ █████       ██   ██ ██    ██ █████   ██████  
      ██    ██ ██   ██ ██  ██  ██ ██          ██   ██ ██    ██ ██      ██   ██ 
       ██████  ██   ██ ██      ██ ███████     ███████  ██████  ███████ ██   ██ 
                                                                             
    )";
        }
        else if (ganhououperdeu == 1){
            cout << R"(

        ███████╗███████╗███████╗     █████╗     ██████╗  ██████╗  █████╗   ██╗
        ██╔════╝██╔════╝     ██║    ██╔══██╗    ██╔══██╗██╔═══██╗██╔══██╗  ██║
        █████╗  █████╗   █████║     ███████║    ██████╔╝██║   ██║███████║  ██║
        ██╔══╝  ██╔══╝  ██║         ██╔══██║    ██╔══██╗██║   ██║██╔══██║  ╚═╝ 
        ██║     ███████╗███████║    ██║  ██║    ██████╔╝╚██████╔╝██║  ██║  ██╗
        ╚═╝     ╚══════╝╚══════╝    ╚═╝  ╚═╝    ╚═════╝  ╚═════╝ ╚═╝  ╚═╝  ╚═╝
                                                                           
        )";
        }
    sleep (1);
    Vidas = 3;
    system("clear");
    main();
    }
    else{
	printf("\033[?25l"); //codi para desativar o cursor no console
    int enter;
    system("clear");
    cout << "\n";
    cout <<"  ____      /\\       __  __    _____ \n";
    cout << " / ___|    /  \\     |  \\/  |  | ____|\n";
    cout << "| |  _    / /\\ \\    | |\\/| |  |  _|  \n";
    cout << "| |_| |  / ____ \\   | |  | |  | |___ \n";
    cout << " \\____| /_/    \\_\\  |_|  |_|  |_____|\n";
    cout << "the game.";
    cout << "\n\n[1] Jogar";
    cout << "\n[2] Modos";
    cout << "\n[3] Sobre";
    cout << "\n[4] Sair";
    char x;
    x = getch();
    
//////////////////////////// Menu //////////////////////////////////////////////

    switch (x) {
        default:
            main();
        case '4':
            system("clear");
            abort();
            
        case '3':
            system("clear");
            cout << "\n";
            cout <<"  ____      /\\       __  __    _____ \n";
            cout << " / ___|    /  \\     |  \\/  |  | ____|\n";
            cout << "| |  _    / /\\ \\    | |\\/| |  |  _|  \n";
            cout << "| |_| |  / ____ \\   | |  | |  | |___ \n";
            cout << " \\____| /_/    \\_\\  |_|  |_|  |_____|\n";
            cout << "the game.";  
            cout << "\n\n--- Sobre o Jogo ---\n";
            cout << "Desenvolvido por Herick Betin Tiburski\n";
            cout << "Projeto realizado para a disciplina de Algoritmos e Programação (T3)\n";
            cout << "Professor: Thiago Felski\n\n";
            cout << "Junho/2025";
            
            cout << "--- Como Jogar ---\n";
            cout << "• Use as teclas WASD para mover o personagem.\n";
            cout << "• Empurre caixas para resolver puzzles e abrir caminho.\n";
            cout << "• Divida seu personagem para superar certos desafios e avançar nos níveis.\n\n";
            cout << "[1] Voltar";
            char z;
            z = getch();
            switch (z) {
                case '1':
                    system("clear");
                    main();
            }
            
////////////////////////// Nivel do Jogo ///////////////////////////////////////

        case '2':
            system("clear");
            cout << "\n";
            cout <<"  ____      /\\       __  __    _____ \n";
            cout << " / ___|    /  \\     |  \\/  |  | ____|\n";
            cout << "| |  _    / /\\ \\    | |\\/| |  |  _|  \n";
            cout << "| |_| |  / ____ \\   | |  | |  | |___ \n";
            cout << " \\____| /_/    \\_\\  |_|  |_|  |_____|\n";
            cout << "the game.";
            cout << "\n\n[1] Normal";
            cout << "\n[2] HARDKORE";
            cout << "\n[3] Voltar";
            char y;
            y = getch();
            switch (y) {
                case '1':
                    nivel = 1;
                    break;
                case '2':
                    nivel = 2;
                    break;
                case '3':
                    break;
                default:
                    break;
            }
            system("clear");
            main();
        
        
/////////////////////////////// JOGO ///////////////////////////////////////////

        case '1':
            system("clear");
        	int px = 1, py = 1; // pers 1
        	int m[10][90];
        	int passos = 0;
        	int ppx = 0, ppy = 0; // pers 2
        	if (nivel == 1){
        	    ppx = 3;
        	    ppy = 47;
        	}
        	else if (nivel == 2){
        	    ppx = 2;
        	    ppy = 2;
        	}
///////////////////////// mapa 1 ///////////////////////////////////////////////
        	if (nivel == 1){
            	int m[10][90] = {
            		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            		{1, 2, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 8, 1, 1, 1, 0, 0, 67, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 66, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 66, 0, 0, 0, 1},
            		{1, 0, 0, 0, 0, 1, 0, 6, 1, 0, 9, 0, 0, 0, 0, 0, 0, 1, 0, 0, 8, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1},
            		{1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 8, 0, 0, 0, 4, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 15, 0, 1, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 1},
            		{1, 0, 1, 1, 1, 1, 0, 0, 3, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 4, 12},
            		{1, 0, 0, 0, 0, 0, 0, 4, 3, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 8, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1},
            		{1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 8, 1, 1, 1, 69, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 77, 7, 78, 1, 1, 0, 0, 1},
            		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
            	};
        	}
////////////////////////// mapa 2 //////////////////////////////////////////////
        	
        	else if (nivel == 2){
        	    int m[10][90] = {
                    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                    {1,0,0,1,8,8,8,1,8,8,8,8,1,1,1,0,0,0,0,0,0,0,0,0,0,1,8,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,1},
                    {1,0,2,1,8,0,0,1,0,0,0,0,0,0,1,0,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0,1,8,0,1,1,0,1,1,1,1,1,0,0,1,0,0,1,0,0,0,1,0,1,1,1,8,1},
                    {1,0,0,1,8,0,0,0,0,1,1,0,1,1,1,0,1,1,0,0,0,1,0,1,0,0,0,0,0,0,1,8,0,1,8,0,1,0,1,8,0,0,1,0,1,8,0,0,0,0,0,1,8,1,0,0,1,0,1,0,0,0,1,8,1},
                    {1,0,0,1,1,1,1,1,0,1,0,0,1,0,0,0,1,1,1,0,1,1,0,1,0,1,0,1,0,0,1,1,0,1,1,0,1,0,1,8,0,0,1,0,1,1,1,1,1,0,0,1,1,8,0,1,1,0,1,0,1,0,1,8,1},
                    {1,0,0,0,8,1,0,1,0,1,0,0,1,1,0,0,1,1,1,0,1,0,0,0,0,1,0,1,0,0,1,0,0,1,8,0,0,0,1,8,8,0,0,0,0,0,0,8,1,0,0,1,8,1,0,0,1,0,1,0,1,12,1,8,1},
                    {1,0,0,1,1,1,0,0,0,1,0,0,0,1,1,0,0,1,1,1,1,0,1,1,1,1,0,1,0,0,1,0,0,1,1,1,0,0,1,1,1,1,1,0,1,1,1,1,1,0,0,1,0,0,1,0,0,0,1,0,1,1,1,8,1},
                    {1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,6,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,8,1,0,0,0,0,0,0,0,0,0,0,0,8,1,0,0,0,0,0,0,0,8,1},
                    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
                };
                
        	}
        
        	char x;
        
        	bool dentroZonaEspecial = false;
        	bool dentroZonaEspecial2 = false;
        	bool dentroZonaEspecial3 = false;
        	bool dentroZonaEspecial4 = false;
        	Vidas = 3;
        	visible = 0;
        	int pers = 1;
        	if (nivel == 1){
            	pers = 1;
        	}
        	else {
        	    pers = 4;
        	}
        	    
        	while (true) {
        	    
////////////////////////// imprime matriz //////////////////////////////////////

            if (nivel == 1){
        		for (int i = 0; i < 10; i++) {
        			for (int j = 0; j < 90; j++) {
        				switch (m[i][j]) {
        				case 0: // void
        					cout << " ";
        					break;
        				case 1: // parede
        					printf("\033[0;44m");
        					cout << " ";
        					printf("\033[0m");
        					break;
        				case 2: //personagem 2
        				    if (pers == 1){
        					    cout << "2";
        					    break;
        				    }
        				    else if (pers == 2 || 3){
        				        cout << "1";
        				        break;
        				    }
        				case 20: // personagem 1 
        					cout << "1";
        					break;
        				case 22: // personagem 1
        				    cout << "1";
        					break;
        				case 3: // porta
        					printf("\033[0;46m");
        					cout << " ";
        					printf("\033[0m");
        					break;
        				case 4: // caixa
        					printf("\033[0;43m");
        					cout << " ";
        					printf("\033[0m");
        					break;
        				case 5: // nada
        					cout << " ";
        					break;
        				case 6: // botão
        					printf("\033[1;31m");
        					cout << "*";
        					printf("\033[0m");
        					break;
        				case 67: // botão
        					printf("\033[1;31m");
        					cout << "*";
        					printf("\033[0m");
        					break;
        				case 69: //botão
        					printf("\033[1;31m");
        					cout << "*";
        					printf("\033[0m");
        					break;
        				case 10: // nada
        					printf("\033[0;47m");
        					cout << " ";
        					printf("\033[0m");
        					break;
        				case 8: // fogo
        					printf("\033[0;41m");
        					cout << " ";
        					printf("\033[0m");
        					break;
        				case 9: // extintor
        					cout << "I";
        					break;
        				case 11: // nada
        					cout << " ";
        					break;
        				case 66: // botão
        					printf("\033[1;31m");
        					cout << "*";
        					printf("\033[0m");
        					break;
        				case 15: // divisor
        					printf("\033[1;37m");
        					cout << "%";
        					printf("\033[0m");
        					break;
        				case 7: // somador
        					printf("\033[1;42m");
        					cout << "+";
        					printf("\033[0m");
        					break;
                        case 12: // final
        					printf("\033[0;40m");
        					cout << " ";
        					printf("\033[0m");
        					break;
        				case 77: // somador 
        					printf("\033[0;42m");
        					cout << " ";
        					printf("\033[0m");
        					break;
        				case 78: // somador
        					printf("\033[0;42m");
        					cout << " ";
        					printf("\033[0m");
        					break;
        				case 79: // somador valor 1
        					printf("\033[0;42m");
        					cout << "1";
        					printf("\033[0m");
        					break;
        				
        				default:
        					cout << " ";
        				}
        			}
        			cout << endl;
        		}
            }
            else {
                for (int i = 0; i < 10; i++) {
        			for (int j = 0; j < 90; j++) {
        			    if (visible == 1){
            				switch (m[i][j]) {
                				case 0: // void
                					cout << " ";
                					break;
                				case 4: // caixa
                					printf("\033[0;43m");
                					cout << " ";
                					printf("\033[0m");
                					break;
                				case 6: // botão
                					printf("\033[1;31m");
                					cout << "*";
                					printf("\033[0m");
                				case 69: // botão
                					printf("\033[1;31m");
                					cout << "*";
                					printf("\033[0m");
                					break;
                				case 8: // fogo
                					printf("\033[0;41m");
                					cout << " ";
                					printf("\033[0m");
                					break;
                				case 12:
                					printf("\033[0;40m");
                					cout << " ";
                					printf("\033[0m");
                					break;
                			  	case 3: // porta
                					printf("\033[0;46m");
                					cout << " ";
                					printf("\033[0m");
                					break;
                				case 1: // parede
                					printf("\033[0;44m");
                					cout << " ";
                					printf("\033[0m");
                					break;
            				}
        			    }
        			    else if (visible == 0){
        				    switch (m[i][j]) {
        				//personagem 1
            				case 2:
            				    if (pers == 4){
            					    cout << "2";
            					    break;
            				    }
            				case 22:
            					printf("\033[0;44m");
            					cout << " ";
            					printf("\033[0m");
            					break;
            					
                				default:
                					cout << " ";
                				}
        			    }
        				
        			}
        			cout << endl;
        		}
            }
        	

///////////////////////// Sistema de Vida //////////////////////////////////////

        		if (Vidas == 3) {
        			cout << "|Vidas: * * * | Passos: " << passos << "\n";
        		}
        		else if (Vidas == 2) {
        			cout << "|Vidas: * *   | Passos: " << passos << "\n";
        		}
        		else if (Vidas == 1) {
        			cout << "|Vidas: *     | Passos: " << passos << "\n";
        		}
        		else if (Vidas == 0) {
        		    ganhououperdeu = 0;
        		    system("clear");
        		    main();
        		    break;
        		}
        		
/////////////////////// Sistema de personagem///////////////////////////////////

                if (a1 == 0 && a2 == 1){
                    pers = 3;
                }
                else if (a2 == 0 && a1 == 1){
                    pers = 2;
                }
                else if (a1 == 0 && a2 == 0){
                    pers = 1;
                    m[px][py] = 0;
                    px = 6;
                    py = 57;
                    m[px][py] = 2;
                    m[6][56] = 0;
                    m[6][58] = 0;
                    a1 = 1;
                    a2 = 1;
                   
                }
        		if (pers == 1) {
        			cout << "|Personagem : 1 | Valor : 2 |\n";
        		}
        		else if (pers == 2) {
        			cout << "|Personagem : 1 | Valor : 1 | Alternar click '2'\n";
        		}
        		else if (pers == 3) {
        			cout << "|Personagem : 2 | Valor : 1 | Alternar click '1'\n";
        		}
        		
///////////////////////// Exibir Nivel /////////////////////////////////////////

        		printf("\033[1;37m");
        		cout << "|Nivel " << nivel << " |\nQ - Quit";
        		printf("\033[0m");

////////////////////////////////Movimentação////////////////////////////////////

        		x = getch();

        		if (pers == 1){
            		switch (x) {
            		case 'w':
            			if (m[px-1][py] == 0) {
            				m[px][py] = 0;
            				px = px - 1;
            				m[px][py] = 2;
            				passos ++;
            			}
            			else if (m[px-1][py] == 5) {
            				return 0;
            			}
            			
////////////////////////////// apertar botão ///////////////////////////////////

            			else if (m[px-1][py] == 6) {
            				m[2][7] = 2;
            				m[px][py] = 0;
            				px = px - 1;
            				m[px][py] = 2;
            				passos++;
            			}
            			
/////////////////////////// Empurrar caixa /////////////////////////////////////

            			else if (m[px-1][py] == 4) {
            				if (m[px-2][py] == 0) {
            					m[px][py] = 0;
            					px = px - 1;
            					m[px][py] = 2;
            					m[px-1][py] = 4;
            					passos++;
            				}
            				
////////////////////////// apertar botão com caixa//////////////////////////////

            				else if (m[px-2][py] == 6) {
            					m[px][py] = 0;
            					px = px - 1;
            					m[px][py] = 2;
            					m[px-1][py] = 4;
            					m[4][8] = 0;
            					m[5][8] = 0;
            					passos++;
            				}
            			}
            			
////////////////////////// Empurras extintor ///////////////////////////////////

            			else if (m[px-1][py] == 9) {
            				if (m[px-2][py] == 0) {
            					m[px][py] = 0;
            					px = px - 1;
            					m[px][py] = 2;
            					m[px-1][py] = 9;
            					passos++;
            				}
            
            			}
            			break;
            			
 ///////////////////////////////////////////////////////////////////////////////          			
////////////////////////////////// Tecla S /////////////////////////////////////           			
////////////////////////////////////////////////////////////////////////////////

            		case 's':
            			if (m[px+1][py] == 0) {
            				m[px][py] = 0;
            				px = px + 1;
            				m[px][py] = 2;
            				passos ++;
            			}
            			
//////////////////////// Apertar Botão /////////////////////////////////////////

            			else if (m[px+1][py] == 6) {
            				m[2][7] = 2;
            				m[px][py] = 0;
            				px = px + 1;
            				m[px][py] = 2;
            				passos++;
            			}
            			
            			else if (m[px+1][py] == 5) {
            				return 0;
            			}
            			
///////////////////////// Empurrar caixa ///////////////////////////////////////

            			else if (m[px+1][py] == 4) {
            				if (m[px+2][py] == 0) {
            					m[px][py] = 0;
            					px = px + 1;
            					m[px][py] = 2;
            					m[px+1][py] = 4;
            					passos++;
            				}
            				

///////////////////////////// Empurrar caixa no botão //////////////////////////

            			else if (m[px+2][py] == 6) {
            					m[px][py] = 0;
            					px = px - 1;
            					m[px][py] = 2;
            					m[px+1][py] = 4;
            					m[4][8] = 0;
            					m[5][8] = 0;
            					passos++;
            
            				}
            			}
            			
///////////////////////////// Empurar Extintor /////////////////////////////////
            			
            			else if (m[px+1][py] == 9) {
            				if (m[px+2][py] == 0) {
            					m[px][py] = 0;
            					px = px + 1;
            					m[px][py] = 2;
            					m[px+1][py] = 9;
            					passos++;
            				}
            			}
            			break;
            			
////////////////////////////////////////////////////////////////////////////////
////////////////////////// Tecla A ////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

            		case 'a':
            			if (m[px][py-1] == 0) {
            				m[px][py] = 0;
            				py = py - 1;
            				m[px][py] = 2;
            				passos ++;
            			}
            			if (m[1][26] == 0){
            			    m[1][26] = 67;
            			}
            			else if (m[px][py-1] == 5) {
            				return 0;
            			}
            			else if (m[px][py-1] == 4) {
            				if (m[px][py-2] == 0) {
            					m[px][py] = 0;
            					py = py - 1;
            					m[px][py] = 2;
            					m[px][py-1] = 4;
            					passos++;
            				}
            				else if (m[px][py-2] == 69) {
            					m[6][24] = 4;
            					m[px][py] = 0;
            					py = py - 1;
            					m[px][py] = 2;
            					passos++;
            				}
            			}
            				
//////////////////////////////// Apertar o botão ///////////////////////////////

            				else if (m[px][py-1] == 6) {
            					m[2][7] = 2;
            					m[px][py] = 0;
            					py = py - 1;
            					m[px][py] = 2;
            					passos++;
            				}
            				else if (m[px][py-1] == 69) {
            					m[6][24] = 2;
            					m[px][py] = 0;
            					py = py - 1;
            					m[px][py] = 2;
            					passos++;
            				}
            			
///////////////////////////// empurar extintor /////////////////////////////////

            			else if (m[px][py-1] == 9) {
            				if (m[px][py-2] == 0) {
            					m[px][py] = 0;
            					py = py - 1;
            					m[px][py] = 2;
            					m[px][py-1] = 9;
            				}
            			}
            			break;
            			
////////////////////////////////////////////////////////////////////////////////            			
////////////////////////////// Tecla D /////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////     
 
            		case 'd':
            		
            			if (m[px][py+1] == 0) {
            				m[px][py] = 0;
            				py = py + 1;
            				m[px][py] = 2;
            				passos ++;
            			}
            			
            			if (m[6][24] == 0){
            			    m[6][24] = 69;
            			}
            			
            			else if (m[px][py+1] == 67) {
            				m[1][26] = 2;
            				m[px][py] = 0;
            				py = py + 1;
            				m[px][py] = 2;
            				passos++;
            			}
/////////////////////////abrir porta no finalzinho de cima//////////////////////

            			else if (m[px][py+1] == 66) {
            				m[1][47] = 2;
            				m[px][py] = 0;
            				py = py + 1;
            				m[px][py] = 2;
            				passos++;
            			}
            			
/////////////////////////////// VITORIA ////////////////////////////////////////

            			else if (m[px][py+1] == 12) {
            			    ganhououperdeu = 1;
            			    Vidas = 0;
                		    system("clear");
                		    main();
                		    break;
            			}
////////////////////////////// dividir /////////////////////////////////////////
            		    else if (m[px][py+1] == 15) {
            				m[px][py] = 0;
            				py = py + 1;
            				m[px][py] = 2;
            				m[3][47] = 2;
            				pers = 2;
            				passos++;
            			}
            			else if (m[px][py+1] == 5) {
            				return 0;
            			}
            			else if (m[px][py+2] == 67) {
            				m[1][26] = 4;
            				m[px][py] = 0;
            				py = py + 1;
            				m[px][py] = 2;
            				passos++;
            			}
            			
//////////////////////////abrir porta com personagem////////////////////////////

            			else if (m[px][py+1] == 6) {
            				m[2][7] = 2;
            				m[px][py] = 0;
            				py = py + 1;
            				m[px][py] = 2;
            				passos++;
            			}
            			
            			
/////////////////////////////// Dano////////////////////////////////////////////

            			else if (m[px][py+1] == 8) {
            				m[px][py] = 0;
            				px = 1;
            				py = 1;
            				Vidas --;
            				m[px][py] = 2;
            				passos++;
            
            			}
            			else if (m[px][py+1] == 4) {
            				if (m[px][py+2] == 0) {
            					m[px][py] = 0;
            					py = py + 1;
            					m[px][py] = 2;
            					m[px][py+1] = 4;
            					passos++;
            				}
            				else if (m[px][py+1] == 66) {
            					m[px][py] = 0;
            					py = py - 1;
            					m[px][py] = 2;
            					m[px-1][py] = 4;
            					m[4][8] = 0;
            					m[5][8] = 0;
            					passos++;
            				}
            			}
            			else if (m[px][py+1] == 9) {
            				if (m[px][py+2] == 0) {
            					m[px][py] = 0;
            					py = py + 1;
            					m[px][py] = 2;
            					m[px][py+1] = 9;
            					passos++;
            				}
            				else if (m[px][py+2] == 8) {
            					m[px][py] = 0;
            					py = py + 1;
            					m[px][py] = 2;
            					m[px][py+2] = 0;
            					m[1][20] = 11;
            					m[2][20] = 11;
            					m[3][20] = 11;
            					m[4][20] = 11;
            					m[5][20] = 11;
            					m[6][20] = 11;
            					passos++;
            				}
            			}
            			else if (m[px][py+1] == 11) {
            				
            				m[px][py] = 0;
            				py = py + 1;
            				m[px][py] = 2;
            				passos++;
            			}
            			break;
            			
/////////////////////// Quit for menu //////////////////////////////////////////

            		case 'q':
        		        ganhououperdeu = 3;
        			    Vidas = 0;
            		    system("clear");
            		    main();
            		    break;
            			
            		}

        		}

////////////////////////// Personagem 1 = 1 ////////////////////////////////////

                else if (pers == 2 && a1 == 1){
                    switch (x) {
            		case 'w':
            			if (m[px-1][py] == 0) {
            				m[px][py] = 0;
            				px = px - 1;
            				m[px][py] = 2;
            				passos ++;
            			}
            			break;
            		case 's':
            			if (m[px+1][py] == 0) {
            				m[px][py] = 0;
            				px = px + 1;
            				m[px][py] = 2;
            				passos ++;
            			}
            			else if (m[px+1][py] == 77) {
            				m[6][56] = 79;
            				m[px][py] = 0;
            				a1 = 0;
            				pers == 3;
            				passos++;
            			}
            			else if (m[px+1][py] == 78) {
            				m[6][58] = 79;
            				m[px][py] = 0;
            				a1 = 0;
            				pers == 3;
            				passos++;
            			}
            			break;
            
            		case 'a':
            			if (m[px][py-1] == 0) {
            				m[px][py] = 0;
            				py = py - 1;
            				m[px][py] = 2;
            				passos ++;
            			}            
            			else if (m[px][py-1] == 66) {
            				m[1][59] = 2;
            				m[px][py] = 0;
            				py = py - 1;
            				m[px][py] = 2;
            				passos ++;
            			}
            			break;
            
            		case 'd':
            		//padrão
            			if (m[px][py+1] == 0) {
            				m[px][py] = 0;
            				py = py + 1;
            				m[px][py] = 2;
            				passos ++;
            			}
            			
            			//abrir porta no finalzinho de cima
            			else if (m[px][py+1] == 66) {
            				m[1][47] = 2;
            				m[px][py] = 0;
            				py = py + 1;
            				m[px][py] = 2;
            				passos++;
            			}
            			break;
/////////////////////// Quit for menu //////////////////////////////////////////

            		case 'q':
        		        ganhououperdeu = 3;
        			    Vidas = 0;
            		    system("clear");
            		    main();
            		    break;
            		    
            			if (pers == 2 or pers == 3){
                			case '2':
                			    pers = 3;
                			break;
                			case '1':
                			    pers = 2;
                			break;
            			}
                }
        	    }

//////////////////////// Personagem 2 = 1 //////////////////////////////////////

        	    else if (pers == 3 && a2 == 1){
                    switch (x) {
            		case 'w':
            			if (m[ppx-1][ppy] == 0) {
            				m[ppx][ppy] = 0;
            				ppx = ppx - 1;
            				m[ppx][ppy] = 2;
            				passos ++;
            			}
            			break;
            		case 's':
            			if (m[ppx+1][ppy] == 0) {
            				m[ppx][ppy] = 0;
            				ppx = ppx + 1;
            				m[ppx][ppy] = 2;
            				passos ++;
            			}
            			else if (m[ppx+1][ppy] == 77) {
            				m[6][56] = 79;
            				m[ppx][ppy] = 0;
            				a2 = 0;
            				pers == 2;
            				passos++;
            			}
            			else if (m[ppx+1][ppy] == 78) {
            				m[6][58] = 79;
            				m[ppx][ppy] = 0;
            				a2 = 0;
            				pers == 2;
            				passos++;
            			}
            			break;
            
            		case 'a':
            			if (m[ppx][ppy-1] == 0) {
            				m[ppx][ppy] = 0;
            				ppy = ppy - 1;
            				m[ppx][ppy] = 2;
            				passos ++;
            			}
            			else if (m[ppx][ppy-1] == 66) {
            				m[1][59] = 2;
            				m[ppx][ppy] = 0;
            				ppy = ppy - 1;
            				m[ppx][ppy] = 2;
            				passos ++;
            			}
            			break;
            
            		case 'd':
            		//padrão
            			if (m[ppx][ppy+1] == 0) {
            				m[ppx][ppy] = 0;
            				ppy = ppy + 1;
            				m[ppx][ppy] = 2;
            				passos ++;
            			}
            			//abrir porta no finalzinho de cima
            			else if (m[ppx][ppy+1] == 66) {
            				m[1][47] = 2;
            				m[ppx][ppy] = 0;
            				ppy = ppy + 1;
            				m[ppx][ppy] = 2;
            				passos++;
            			}
            			break;
            			
/////////////////////// Quit for menu //////////////////////////////////////////

            		case 'q':
        		        ganhououperdeu = 3;
        			    Vidas = 0;
            		    system("clear");
            		    main();
            		    break;
            		    
            			if (pers == 2 or pers == 3){
                			case '2':
                			    pers = 3;
                			break;
                			case '1':
                			    pers = 2;
                			break;
            			}
                }
                
        	    }
        	    
///////////////////////// Modo 2 ///////////////////////////////////////////////

        	    else if (pers == 4){
                    switch (x) {
            		case 'w': // andar 
            			if (m[ppx-1][ppy] == 0) {
            				m[ppx][ppy] = 22;
            				ppx = ppx - 1;
            				m[ppx][ppy] = 2;
            				passos ++;
            			}
////////////////////////////andar sobre  a linha////////////////////////////////
            			else if (m[ppx-1][ppy] == 22) { 
            				m[ppx][ppy] = 22;
            				ppx = ppx - 1;
            				m[ppx][ppy] = 2;
            				passos ++;
            			}
            			
///////////////////////////////// Dano /////////////////////////////////////////

            			else if (m[ppx-1][ppy] == 8) {
            				m[ppx][ppy] = 0;
            				ppx = 1;
            				ppy = 1;
            				Vidas --;
            				m[ppx][ppy] = 2;
            				passos++;
            
            			}

            			break;
            		case 's': // andar
            			if (m[ppx+1][ppy] == 0) {
            				m[ppx][ppy] = 22;
            				ppx = ppx + 1;
            				m[ppx][ppy] = 2;
            				passos ++;
            			}
            			
/////////////////////////////////// Vitoria ////////////////////////////////////

            			else if (m[ppx+1][ppy] == 12) {
            			    ganhououperdeu = 1;
            			    Vidas = 0;
                		    system("clear");
                		    main();
            			}
            			
////////////////////////////// andar sobre a linha//////////////////////////////

            			else if (m[ppx+1][ppy] == 22) {
            				m[ppx][ppy] = 22;
            				ppx = ppx + 1;
            				m[ppx][ppy] = 2;
            				passos ++;
            			}
            			
///////////////////////////////// Dano /////////////////////////////////////////

            			else if (m[ppx+1][ppy] == 8) {
            				m[ppx][ppy] = 0;
            				ppx = 1;
            				ppy = 1;
            				Vidas --;
            				m[ppx][ppy] = 2;
            				passos++;
            
            			}

            			break;
            
            		case 'a':
            			if (m[ppx][ppy-1] == 0) {
            				m[ppx][ppy] = 22;
            				ppy = ppy - 1;
            				m[ppx][ppy] = 2;
            				passos ++;
            			} 
            			else if (m[ppx][ppy-1] == 22) {
            				m[ppx][ppy] = 22;
            				ppy = ppy - 1;
            				m[ppx][ppy] = 2;
            				passos ++;
            			}
            			
//////////////////////// Dano //////////////////////////////////////////////////

            			else if (m[ppx][ppy-1] == 8) {
            				m[ppx][ppy] = 0;
            				ppx = 1;
            				ppy = 1;
            				Vidas --;
            				m[ppx][ppy] = 2;
            				passos++;
            
            			}

            			break;
            
            		case 'd': //andar
            	
            			if (m[ppx][ppy+1] == 0) {
            				m[ppx][ppy] = 22;
            				ppy = ppy + 1;
            				m[ppx][ppy] = 2;
            				passos ++;
            			}
            			
/////////////////////////// andar sobre a linha ////////////////////////////////

            			else if (m[ppx][ppy+1] == 22) {
            				m[ppx][ppy] = 22;
            				ppy = ppy + 1;
            				m[ppx][ppy] = 2;
            				passos ++;
            			}

////////////////////////////// Dano ////////////////////////////////////////////

            			else if (m[ppx][ppy+1] == 8) {
            				m[ppx][ppy] = 0;
            				ppx = 1;
            				ppy = 1;
            				Vidas --;
            				m[ppx][ppy] = 2;
            				passos++;
            
            			}
            			break;
            			
/////////////////////// Quit for menu //////////////////////////////////////////

            		case 'q':
        		        ganhououperdeu = 3;
        			    Vidas = 0;
            		    system("clear");
            		    main();
            		    break;
            			
                }
        	    }
        	    
//////////////// Verificações //////////////////////////////////////////////////
                
////////////////////////// em cima do botão 1 //////////////////////////////////

        		if (px == 2 && py == 7) {
        			if (!dentroZonaEspecial) {
        				dentroZonaEspecial = true;
        				m[4][8] = 0;
        				m[5][8] = 0;
        
        			}
        		} else {
        			if (dentroZonaEspecial) {
        				dentroZonaEspecial = false;
        				m[2][7] = 6;
        				m[4][8] = 3;
        				m[5][8] = 3;
        			}
        		}
                    
/////////////////////// verificar se esta no botão 2 ///////////////////////////

    if (nivel != 2){
        
		if (m[6][24] == 69 && m[1][26] == 67) {
			if (!dentroZonaEspecial2) {
				dentroZonaEspecial2 = true;
				m[4][32] = 3;

			}

		} else if (m[6][24] == 4 && m[1][26] == 4) {
			if (dentroZonaEspecial2) {
				dentroZonaEspecial2 = false;
				m[4][32] = 0;

			}
		}
		
		if (ppx == 1 && ppy == 47 || px == 1 && py == 47) {
			if (!dentroZonaEspecial3) {
				dentroZonaEspecial3 = true;
				m[3][55] = 0;
				m[4][55] = 0;
			}
		} else {
			if (dentroZonaEspecial3) {
				dentroZonaEspecial3 = false;
				m[1][47] = 66; 
				m[3][55] = 3;
				m[4][55] = 3;
			}
		}
		if (ppx == 1 && ppy == 59 || px == 1 && py == 59) {
			if (!dentroZonaEspecial4) {
				dentroZonaEspecial4 = true;
				m[3][55] = 0;
				m[4][55] = 0;
			}
		} else {
			if (dentroZonaEspecial4) {
				dentroZonaEspecial4 = false;
				m[1][59] = 66; 
				m[3][55] = 3;
				m[4][55] = 3;
			}
	}
    }

////////////////////////////////////////////////////////////////////////////////

        		// coloca o cursor na posição inicial
        		SetCursorPos(0, 0);
        		//(void)system("clear");
        	}
    }
    }
	return 0;
	return 1;
}
